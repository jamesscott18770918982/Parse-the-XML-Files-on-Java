package com.imooc.dmtest.test;

import java.io.IOException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

public class DOMTest {

	public static void main(String[] args) {
		
		// TODO Auto-generated method stub
	DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
	 try {
		DocumentBuilder db = dbf.newDocumentBuilder();
		Document document= db.parse("book.xml");
		NodeList booklist = document.getElementsByTagName("book");
		//System.out.println("一共有"+booklist.getLength()+"本书");
		//遍历每一个book节点
		for(int i=0;i<booklist.getLength();i++){
			
		   System.out.println("==============下面开始遍历第"+(i+1)+"本书的内容==============");
		   Node book =	 booklist.item(i);
		   
		   //获取book的属性
		   NamedNodeMap attrs= book.getAttributes();
		   
		   System.out.println("第"+(i+1)+"本书共有"+attrs.getLength()+"个属性");
		   //遍历book的属性
		/*   for(int j=0;j<attrs.getLength();j++){
			   
			   //通过item方法获取某一个属性
			  Node attr = attrs.item(j);
			  System.out.println("属性名："+attr.getNodeName());
			  System.out.println("---属性值："+attr.getNodeValue());
		//	  attr.getNodeName();
		   }*/
		/*   Element book = (Element) booklist.item(i);
		   String attrValue= book.getAttribute("id");
		   System.out.println("id属性的属性值为"+attrValue);*/
		
		   NodeList childNodes = book.getChildNodes();
		   System.out.println("第"+(i+1)+"本书共有"+childNodes.getLength()+"个子节点的节点名：");
		   for(int k=0;k<childNodes.getLength();k++)
		   {
			   //区分text类型的node和element类型节点
			   if(childNodes.item(k).getNodeType()==Node.ELEMENT_NODE)
			   {
				   System.out.print("第"+(k+1)+"个节点"+childNodes.item(k).getNodeName());
//				   System.out.println("---节点值是："+childNodes.item(k).getFirstChild().getNodeValue());
				   System.out.println("---节点值是："+childNodes.item(k).getTextContent());
			   }
			  
		   }
		   System.out.println("==============结束遍历第"+(i+1)+"本书的内容==============");
		}
		
	} catch (ParserConfigurationException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	 catch (SAXException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
