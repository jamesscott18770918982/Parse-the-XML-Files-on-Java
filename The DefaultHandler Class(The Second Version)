package com.imooc.handler;

import java.util.ArrayList;

import javax.xml.stream.events.StartElement;


import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

import com.imooc.entity.Book;

public class SAXParserHandler extends DefaultHandler {

	String value = null;
	int bookindex = 0;
	Book book = null;
	private ArrayList<Book> booklist = new ArrayList<Book>();
	
	
	public ArrayList<Book> getBooklist() {
		return booklist;
	}


	//解析开始
	@Override
	public void startDocument() throws SAXException {
		// TODO Auto-generated method stub
		super.startDocument();
		System.out.println("SAX解析开始");
	}
	
	
	//解析结束
	@Override
	public void endDocument() throws SAXException {
		// TODO Auto-generated method stub
		super.endDocument();
		System.out.println("SAX解析结束");
	}
	
	
	//用来遍历xml文件的开始标签
	@Override
	public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {
		// TODO Auto-generated method stub
		
		//调用父类defaulthandler的startelement方法
		super.startElement(uri, localName, qName, attributes);
		
		//开始接续book元素的属性
		if(qName.equals("book")){
			bookindex ++;
			//一直book元素下属性名称，根据属性名称来获取属性值
//			String value = attributes.getValue("id");
//			System.out.println("book的属性值是："+value);
			//不知道book元素下属性的个数和名称，如何获取属性名及属性名下的属性值
			
			
			   book =  new Book();
			   System.out.println("==============开始遍历第"+bookindex+"本书的内容==============");

			int num = attributes.getLength();
			for(int i = 0;i<num;i++){
				System.out.println("book元素第"+(i+1)+"个属性名是："+attributes.getQName(i));		
				System.out.println("---属性值是："+attributes.getValue(i));
				if(attributes.getQName(i).equals("id"))
				{
					book.setId(attributes.getValue(i));
				}
			}
		}
		else if(!qName.equals("book")&&!qName.equals("bookstore")){
			System.out.print("节点名："+qName+"---");
		}
		
		
	}
	
	
	
	//用来遍历xml文件的结束标签
	//解析xml元素
	@Override
	public void endElement(String uri, String localName, String qName) throws SAXException {
		// TODO Auto-generated method stub
		//调用父类defaulthandler的endelement方法
		super.endElement(uri, localName, qName);
		//针对一本书是否已经遍历结束
		if(qName.equals("book")){
			   booklist.add(book);
			   book = null;
			   System.out.println("==============结束遍历第"+bookindex+"本书的内容==============");
			   //创建一个book对象		
		}
		else if(qName.equals("name")){
			book.setName(value);
		}
		else if(qName.equals("author"))
		{
			book.setAuthor(value);
		}
		else if(qName.equals("year"))
		{
			book.setYear(value);
		}
		else if(qName.equals("price"))
		{
			book.setPrice(value);
		}
		else if(qName.equals("language"))
		{
			book.setLanguage(value);
		}
	}


	@Override
	public void characters(char[] ch, int start, int length) throws SAXException {
		// TODO Auto-generated method stub
		super.characters(ch, start, length);
		 value = new String(ch, start, length);
		if(!value.trim().equals(""))
		{
			System.out.println("节点值是："+value);
		}
		
	}
	
	
}
